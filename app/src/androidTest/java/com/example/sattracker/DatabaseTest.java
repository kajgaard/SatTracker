package com.example.sattracker;

import android.content.Context;

import androidx.room.Room;
import androidx.test.core.app.ApplicationProvider;
import androidx.test.ext.junit.runners.AndroidJUnit4;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;

import static org.junit.Assert.*;

import com.example.sattracker.database.AppDatabase;
import com.example.sattracker.database.SittingStatusDao;
import com.example.sattracker.database.SittingStatus;
import com.example.sattracker.database.TimestampFactory;

import java.sql.Timestamp;
import java.time.Month;
import java.util.List;
import java.util.Map;

@RunWith(AndroidJUnit4.class)
public class DatabaseTest {

   private SittingStatusDao ssDao;
   private AppDatabase db;


    @Before
    public void createDb() {
        Context context = ApplicationProvider.getApplicationContext();
        db = Room.inMemoryDatabaseBuilder(context, AppDatabase.class).build();
        ssDao = db.sittingStatusDao();
    }

    @After
    public void closeDb() {
        db.close();
    }


    @Test
    public void insertTwoSittingStatus() {
        Timestamp t1 = new Timestamp(System.currentTimeMillis());
        Timestamp t2 = new Timestamp(System.currentTimeMillis());

        SittingStatus status1 = new SittingStatus(true, t1);
        SittingStatus status2 = new SittingStatus(true, t2);

        ssDao.insertAll(status1, status2);

        List<SittingStatus> statuses = ssDao.getAll();

        // Note: autogenerated uid starts at 1
        assertEquals(2, statuses.size());

        assertEquals(1, statuses.get(0).getId());
        assertEquals(2, statuses.get(1).getId());

        assertEquals(t1, statuses.get(0).getTimestamp());
        assertEquals(t2, statuses.get(1).getTimestamp());
    }

    @Test
    public void delete() {
        Timestamp t1 = new Timestamp(System.currentTimeMillis());
        Timestamp t2 = new Timestamp(System.currentTimeMillis());

        SittingStatus status1 = new SittingStatus(true, t1);
        SittingStatus status2 = new SittingStatus(true, t2);

        ssDao.insertAll(status1, status2);

        List<SittingStatus> statuses = ssDao.getAll();
        status1 = statuses.get(0);
        status2 = statuses.get(1);

        assertEquals(2, statuses.size());

        ssDao.delete(status1);
        statuses = ssDao.getAll();
        assertEquals(1, statuses.size());
        ssDao.delete(status2);
        statuses = ssDao.getAll();
        assertEquals(0, statuses.size());
    }


    @Test
    public void groupByDayOfWeek() {
        Timestamp t1 = TimestampFactory.of(2021,
                Month.MAY, 4, 5, 30, 0);
        Timestamp t2 = TimestampFactory.of(2021,
                Month.MAY, 4, 6, 35, 35);

        Timestamp t3 = TimestampFactory.of(2021,
                Month.JUNE, 21, 12, 2, 1);
        Timestamp t4 = TimestampFactory.of(2021,
                Month.JUNE, 21, 18, 35, 49);

        Timestamp t5 = TimestampFactory.of(2021,
                Month.JUNE, 21, 18, 35, 50);
        Timestamp t6 = TimestampFactory.of(2021,
                Month.JUNE, 21, 18, 49, 0);

        SittingStatus s1 = new SittingStatus(true, t1);
        SittingStatus s2 = new SittingStatus(false, t2);
        SittingStatus s3 = new SittingStatus(true, t3);
        SittingStatus s4 = new SittingStatus(false, t4);
        SittingStatus s5 = new SittingStatus(true, t5);
        SittingStatus s6 = new SittingStatus(false, t6);

        ssDao.insertAll(s1, s2, s3, s4, s5, s6);


    }

}